{"version":3,"file":"resolve-conflicts.js","mappings":"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","sources":["webpack:///../node_modules/escape-string-regexp/index.js","webpack:///../node_modules/regex-join/index.js","webpack:///webpack/bootstrap","webpack:///webpack/runtime/compat get default export","webpack:///webpack/runtime/define property getters","webpack:///webpack/runtime/hasOwnProperty shorthand","webpack:///./resolve-conflicts.ts"],"sourcesContent":["'use strict';\n\nmodule.exports = string => {\n\tif (typeof string !== 'string') {\n\t\tthrow new TypeError('Expected a string');\n\t}\n\n\t// Escape characters with special meaning either inside or outside character sets.\n\t// Use a simple backslash escape when it’s always valid, and a \\unnnn escape when the simpler form would be disallowed by Unicode patterns’ stricter grammar.\n\treturn string\n\t\t.replace(/[|\\\\{}()[\\]^$+*?.]/g, '\\\\$&')\n\t\t.replace(/-/g, '\\\\x2d');\n};\n","\"use strict\";\nconst escapeStringRegexp = require(\"escape-string-regexp\");\nfunction regexJoin(...expressions) {\n    const flags = [];\n    const source = [];\n    for (const part of expressions) {\n        if (part instanceof RegExp) {\n            source.push(part.source);\n            flags.push(...part.flags); // One flag per string\n        }\n        else {\n            source.push(escapeStringRegexp(part));\n        }\n    }\n    return new RegExp(source.join(''), [...new Set(flags)].join(''));\n}\nmodule.exports = regexJoin;\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = (module) => {\n\tvar getter = module && module.__esModule ?\n\t\t() => (module['default']) :\n\t\t() => (module);\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","/* eslint-disable unicorn/better-regex -- Go home you're drunk */\n\nimport regexJoin from 'regex-join';\nimport type CodeMirror from 'codemirror';\n\ndeclare module 'codemirror' {\n\tinterface LineHandle {\n\t\twidgets: unknown[];\n\t\tlineNo: () => number;\n\t}\n}\n\nconst editor = document.querySelector<Element & {CodeMirror: CodeMirror.Editor}>('.CodeMirror')!.CodeMirror;\n\n// Event fired when each file is loaded\neditor.on('swapDoc', () => setTimeout(addWidget, 1));\n\n// Restore widget on undo\neditor.on('changes', (_, [firstChange]) => {\n\tif (firstChange.origin === 'undo' && firstChange.text[0].startsWith('<<<<<<<')) {\n\t\taddWidget();\n\n\t\t// Reset cursor position to one line instead of multiple\n\t\teditor.setCursor(editor.getCursor());\n\t}\n});\n\nfunction getLineNumber(lineChild: Element): number {\n\treturn Number(\n\t\tlineChild\n\t\t\t.closest('.CodeMirror-gutter-wrapper, .CodeMirror-linewidget')!\n\t\t\t.parentElement!\n\t\t\t.querySelector('.CodeMirror-linenumber')!\n\t\t\t.textContent,\n\t) - 1;\n}\n\nfunction appendLineInfo(lineHandle: CodeMirror.LineHandle, text: string): void {\n\t// Only append text if it's not already there\n\tif (!lineHandle.text.includes(text)) {\n\t\tconst line = lineHandle.lineNo();\n\t\teditor.replaceRange(text, {line, ch: Number.POSITIVE_INFINITY}); // Infinity = end of line\n\t\teditor.clearHistory();\n\t}\n}\n\n// Create and add widget if not already in the document\nfunction addWidget(): void {\n\teditor.eachLine(lineHandle => {\n\t\tif (Array.isArray(lineHandle.widgets) && lineHandle.widgets.length > 0) {\n\t\t\treturn;\n\t\t}\n\n\t\tif (lineHandle.text.startsWith('<<<<<<<')) {\n\t\t\tappendLineInfo(lineHandle, ' -- Incoming Change');\n\t\t\tconst line = lineHandle.lineNo();\n\t\t\teditor.addLineClass(line, '', 'rgh-resolve-conflicts');\n\t\t\teditor.addLineWidget(line, newWidget(), {\n\t\t\t\tabove: true,\n\t\t\t\tnoHScroll: true,\n\t\t\t});\n\t\t} else if (lineHandle.text.startsWith('>>>>>>>')) {\n\t\t\tappendLineInfo(lineHandle, ' -- Current Change');\n\t\t}\n\t});\n}\n\nfunction createButton(branch: string, title = `Accept ${branch} Change`): HTMLButtonElement {\n\tconst link = document.createElement('button');\n\tlink.type = 'button';\n\tlink.className = 'btn-link';\n\tlink.textContent = title;\n\tlink.addEventListener('click', ({target}) => {\n\t\tacceptBranch(branch, getLineNumber(target as Element));\n\t});\n\treturn link;\n}\n\n// Create and return conflict resolve widget for specific conflict\nfunction newWidget(): HTMLDivElement {\n\tconst widget = document.createElement('div');\n\twidget.style.fontWeight = 'bold';\n\twidget.append(\n\t\tcreateButton('Current'),\n\t\t' | ',\n\t\tcreateButton('Incoming'),\n\t\t' | ',\n\t\tcreateButton('Both', 'Accept Both Changes'),\n\t);\n\treturn widget;\n}\n\nconst currentChange = /^>>>>>>> .+ -- Current Change$/;\nconst incomingChange = /^<<<<<<< .+ -- Incoming Change$/;\nconst anyMarker = regexJoin(currentChange, /|/, incomingChange, /|^=======$/);\n\n// Accept one or both of branches and remove unnecessary lines\nfunction acceptBranch(branch: string, line: number): void {\n\t// This variable is only changed when a marker is encountered and is meant to stay positive/negative until the next marker\n\tlet inDeletableSection = false;\n\n\tconst linesToRemove: number[] = [];\n\teditor.eachLine(line, Number.POSITIVE_INFINITY, lineHandle => {\n\t\tconst currentLine = lineHandle.text;\n\n\t\t// Determine whether to remove the following line(s)\n\t\tif (incomingChange.test(currentLine)) {\n\t\t\tinDeletableSection = branch === 'Current';\n\t\t} else if (currentLine === '=======') {\n\t\t\tinDeletableSection = branch === 'Incoming';\n\t\t}\n\n\t\t// Delete tracked lines and all conflict markers\n\t\tif (inDeletableSection || anyMarker.test(currentLine)) {\n\t\t\tlinesToRemove.push(lineHandle.lineNo());\n\t\t}\n\n\t\treturn currentChange.test(currentLine); // `true` ends loop\n\t});\n\n\t// Delete all lines at once in a performant way\n\tconst ranges = linesToRemove.map(line => ({\n\t\tanchor: {line, ch: 0},\n\t\thead: {line, ch: 0},\n\t}));\n\teditor.setSelections(ranges);\n\teditor.execCommand('deleteLine');\n\teditor.setCursor(linesToRemove[0]);\n}\n\n/* eslint-enable unicorn/better-regex */\n"],"names":["module","exports","string","TypeError","replace","escapeStringRegexp","expressions","flags","source","part","RegExp","push","join","Set","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","undefined","__webpack_modules__","n","getter","__esModule","d","a","definition","key","o","Object","defineProperty","enumerable","get","obj","prop","prototype","hasOwnProperty","call","editor","document","querySelector","CodeMirror","appendLineInfo","lineHandle","text","includes","line","lineNo","replaceRange","ch","Number","POSITIVE_INFINITY","clearHistory","addWidget","eachLine","Array","isArray","widgets","length","startsWith","addLineClass","addLineWidget","widget","createElement","style","fontWeight","append","createButton","newWidget","above","noHScroll","branch","title","link","type","className","textContent","addEventListener","target","lineChild","inDeletableSection","linesToRemove","currentLine","incomingChange","test","anyMarker","currentChange","ranges","map","anchor","head","setSelections","execCommand","setCursor","acceptBranch","closest","parentElement","on","setTimeout","_","firstChange","origin","getCursor"],"sourceRoot":""}